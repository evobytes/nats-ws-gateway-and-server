name: Build and Release

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        goos: [linux]
        goarch: [amd64, arm64]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.2'

      - name: Build for ${{ matrix.goarch }}
        run: |
          export GOOS=${{ matrix.goos }}
          export GOARCH=${{ matrix.goarch }}
          make build

      - name: Rename and list built binary
        run: |
          mv bin/nats-ws-gateway-and-server bin/nats-ws-gateway-and-server-${{ matrix.goarch }}
          ls -l bin

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: nats-ws-gateway-and-server-${{ matrix.goarch }}
          path: bin/nats-ws-gateway-and-server-${{ matrix.goarch }}
  
  package:
    needs: [build]
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        goarch: [amd64, arm64]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Download compiled binary
        uses: actions/download-artifact@v4
        with:
          name: nats-ws-gateway-and-server-${{ matrix.goarch }}
          path: bin

      - name: Install FPM
        run: |
          sudo apt-get update
          sudo apt-get install -y ruby-dev build-essential
          sudo gem install fpm

      - name: Create packages for ${{ matrix.goarch }}
        run: |
          VERSION=$(echo ${{ github.ref }} | sed -e 's|refs/tags/v||')
          echo "Building packages for version: $VERSION"
          
          # This section is written to be robust against pathing errors.
          STAGING_DIR=./dist
          mkdir -p $STAGING_DIR/usr/bin
          mkdir -p $STAGING_DIR/lib/systemd/system
          mkdir -p ./.build

          cp bin/nats-ws-gateway-and-server-${{ matrix.goarch }} $STAGING_DIR/usr/bin/nats-ws-gateway-and-server
          cp .github/templates/nats-ws-gateway-and-server.service $STAGING_DIR/lib/systemd/system/
          cp .github/templates/postinst.sh ./.build/postinst.sh

          fpm \
            -s dir \
            -t deb \
            --name nats-ws-gateway-and-server \
            --version "$VERSION" \
            --architecture ${{ matrix.goarch }} \
            --description "NATS.io WebSocket Gateway and Embedded Server" \
            --maintainer "Your Name <your-email@example.com>" \
            --url "https://github.com/${{ github.repository }}" \
            --license "MIT" \
            --after-install ./.build/postinst.sh \
            -C $STAGING_DIR \
            usr/bin/nats-ws-gateway-and-server \
            lib/systemd/system/nats-ws-gateway-and-server.service
          
          fpm \
            -s dir \
            -t rpm \
            --name nats-ws-gateway-and-server \
            --version "$VERSION" \
            --architecture ${{ matrix.goarch }} \
            --description "NATS.io WebSocket Gateway and Embedded Server" \
            --maintainer "Your Name <your-email@example.com>" \
            --url "https://github.com/${{ github.repository }}" \
            --license "MIT" \
            --after-install ./.build/postinst.sh \
            -C $STAGING_DIR \
            usr/bin/nats-ws-gateway-and-server \
            lib/systemd/system/nats-ws-gateway-and-server.service
      
      - name: List generated packages
        run: ls -l

      - name: Upload .deb and .rpm artifacts
        uses: actions/upload-artifact@v4
        with:
          name: nats-ws-gateway-and-server-packages-${{ matrix.goarch }}
          path: |
            *.deb
            *.rpm

  release:
    needs: [package]
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-24.04
    steps:
      - name: Download all packages
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            artifacts/nats-ws-gateway-and-server-packages-amd64/*.deb
            artifacts/nats-ws-gateway-and-server-packages-amd64/*.rpm
            artifacts/nats-ws-gateway-and-server-packages-arm64/*.deb
            artifacts/nats-ws-gateway-and-server-packages-arm64/*.rpm
          body: |
            Automated release of nats-ws-gateway-and-server packages for version ${{ github.ref_name }}.
